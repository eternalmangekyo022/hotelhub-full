/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as PrivacyPolicyImport } from './routes/privacy-policy'
import { Route as LoginImport } from './routes/login'
import { Route as NotFoundRouteImport } from './routes/NotFoundRoute'
import { Route as HotelsImport } from './routes/Hotels'
import { Route as ContactImport } from './routes/Contact'
import { Route as AboutImport } from './routes/About'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const NotFoundRouteRoute = NotFoundRouteImport.update({
  id: '/NotFoundRoute',
  path: '/NotFoundRoute',
  getParentRoute: () => rootRoute,
} as any)

const HotelsRoute = HotelsImport.update({
  id: '/Hotels',
  path: '/Hotels',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/Contact',
  path: '/Contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/About',
  path: '/About',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/About': {
      id: '/About'
      path: '/About'
      fullPath: '/About'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/Contact': {
      id: '/Contact'
      path: '/Contact'
      fullPath: '/Contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/Hotels': {
      id: '/Hotels'
      path: '/Hotels'
      fullPath: '/Hotels'
      preLoaderRoute: typeof HotelsImport
      parentRoute: typeof rootRoute
    }
    '/NotFoundRoute': {
      id: '/NotFoundRoute'
      path: '/NotFoundRoute'
      fullPath: '/NotFoundRoute'
      preLoaderRoute: typeof NotFoundRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/About': typeof AboutRoute
  '/Contact': typeof ContactRoute
  '/Hotels': typeof HotelsRoute
  '/NotFoundRoute': typeof NotFoundRouteRoute
  '/login': typeof LoginRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/About': typeof AboutRoute
  '/Contact': typeof ContactRoute
  '/Hotels': typeof HotelsRoute
  '/NotFoundRoute': typeof NotFoundRouteRoute
  '/login': typeof LoginRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/About': typeof AboutRoute
  '/Contact': typeof ContactRoute
  '/Hotels': typeof HotelsRoute
  '/NotFoundRoute': typeof NotFoundRouteRoute
  '/login': typeof LoginRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/About'
    | '/Contact'
    | '/Hotels'
    | '/NotFoundRoute'
    | '/login'
    | '/privacy-policy'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/About'
    | '/Contact'
    | '/Hotels'
    | '/NotFoundRoute'
    | '/login'
    | '/privacy-policy'
    | '/register'
  id:
    | '__root__'
    | '/'
    | '/About'
    | '/Contact'
    | '/Hotels'
    | '/NotFoundRoute'
    | '/login'
    | '/privacy-policy'
    | '/register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  HotelsRoute: typeof HotelsRoute
  NotFoundRouteRoute: typeof NotFoundRouteRoute
  LoginRoute: typeof LoginRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  HotelsRoute: HotelsRoute,
  NotFoundRouteRoute: NotFoundRouteRoute,
  LoginRoute: LoginRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/About",
        "/Contact",
        "/Hotels",
        "/NotFoundRoute",
        "/login",
        "/privacy-policy",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/About": {
      "filePath": "About.tsx"
    },
    "/Contact": {
      "filePath": "Contact.tsx"
    },
    "/Hotels": {
      "filePath": "Hotels.tsx"
    },
    "/NotFoundRoute": {
      "filePath": "NotFoundRoute.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
